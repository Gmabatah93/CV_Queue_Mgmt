[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "premise-cv-platform"
version = "1.0.0"
description = "PREMISE Computer Vision Analytics Platform for Banking"
authors = [
    {name = "PREMISE Team", email = "team@premise.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial Services",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial",
]

dependencies = [
    # Computer Vision & AI
    "ultralytics>=8.0.0",
    "opencv-python>=4.8.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.24.0",
    
    # Dashboard & Visualization
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # Data Processing & Storage
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # Environment & Configuration
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    
    # Logging & Monitoring
    "loguru>=0.7.0",
    
    # Testing & Development
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    
    # CLI Interface
    "click>=8.0.0",
    "rich>=13.0.0",
    
    # Utilities
    "pillow>=9.5.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "jupyterlab>=4.0.0",
    "ipykernel>=6.25.0",
    "pre-commit>=3.0.0",
]

gpu = [
    "torch[cu118]>=2.0.0",
    "torchvision[cu118]>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/premise/cv-platform"
Documentation = "https://premise-cv.readthedocs.io"
Repository = "https://github.com/premise/cv-platform.git"
Issues = "https://github.com/premise/cv-platform/issues"

[project.scripts]
premise-cv = "premise_cv_platform.main:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["premise_cv_platform*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["premise_cv_platform"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]